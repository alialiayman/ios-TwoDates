"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ItemsComponent = /** @class */ (function () {
    function ItemsComponent() {
        this.dateDifference = "0 Year 0 Month 0 Day";
        this.daysString = 0;
    }
    ItemsComponent.prototype.ngOnInit = function () {
    };
    ItemsComponent.prototype.onDate1Changed = function (args) {
        var datePicker = args.object;
        this.date1 = datePicker.date;
        this.CalculateDifference();
    };
    ItemsComponent.prototype.CalculateDifference = function () {
        var difference = Math.abs(Math.round((this.date1.getTime() - this.date2.getTime()) / (1000 * 60 * 60 * 24)));
        this.daysString = difference;
        var humanizedString = '';
        var years = difference / 365;
        if (years >= 1) {
            difference -= (parseInt(years.toString()) * 365);
            humanizedString += parseInt(years.toString()) + ' Year ';
        }
        var month = difference / 30;
        if (month >= 1) {
            difference -= (parseInt(month.toString()) * 30);
            humanizedString += parseInt(month.toString()) + ' Month ';
        }
        if (difference >= 1) {
            humanizedString += difference + ' Day';
        }
        this.dateDifference = humanizedString.trim();
    };
    ItemsComponent.prototype.onDate2Changed = function (args) {
        var datePicker = args.object;
        this.date2 = datePicker.date;
        this.CalculateDifference();
    };
    ItemsComponent.prototype.onPicker1Loaded = function (args) {
        var datePicker = args.object;
        this.date1 = new Date();
        datePicker.year = this.date1.getFullYear();
        datePicker.month = this.date1.getMonth() + 1;
        datePicker.day = this.date1.getDate();
    };
    ItemsComponent.prototype.onPicker2Loaded = function (args) {
        var datePicker = args.object;
        this.date2 = new Date();
        datePicker.year = this.date2.getFullYear();
        datePicker.month = this.date2.getMonth() + 1;
        datePicker.day = this.date2.getDate();
    };
    ItemsComponent = __decorate([
        core_1.Component({
            selector: "ns-items",
            moduleId: module.id,
            templateUrl: "./items.component.html",
        }),
        __metadata("design:paramtypes", [])
    ], ItemsComponent);
    return ItemsComponent;
}());
exports.ItemsComponent = ItemsComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaXRlbXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQWtEO0FBUWxEO0lBRUk7UUFNQSxtQkFBYyxHQUFXLHNCQUFzQixDQUFDO1FBU3pDLGVBQVUsR0FBVyxDQUFDLENBQUM7SUFmZCxDQUFDO0lBRWpCLGlDQUFRLEdBQVI7SUFFQSxDQUFDO0lBTUQsdUNBQWMsR0FBZCxVQUFlLElBQUk7UUFDZixJQUFJLFVBQVUsR0FBZSxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3pDLElBQUksQ0FBQyxLQUFLLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQztRQUM3QixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRUQsNENBQW1CLEdBQW5CO1FBQ0ksSUFBSSxVQUFVLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0csSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxlQUFlLEdBQVcsRUFBRSxDQUFDO1FBQ2pDLElBQUksS0FBSyxHQUFHLFVBQVUsR0FBRyxHQUFHLENBQUM7UUFDN0IsSUFBSSxLQUFLLElBQUksQ0FBQyxFQUFFO1lBQ1osVUFBVSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQ2pELGVBQWUsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDO1NBQzVEO1FBQ0QsSUFBSSxLQUFLLEdBQUcsVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUM1QixJQUFJLEtBQUssSUFBSSxDQUFDLEVBQUU7WUFDWixVQUFVLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDaEQsZUFBZSxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUM7U0FDN0Q7UUFDRCxJQUFJLFVBQVUsSUFBSSxDQUFDLEVBQUU7WUFDakIsZUFBZSxJQUFJLFVBQVUsR0FBRyxNQUFNLENBQUM7U0FDMUM7UUFDRCxJQUFJLENBQUMsY0FBYyxHQUFHLGVBQWUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNqRCxDQUFDO0lBQ0QsdUNBQWMsR0FBZCxVQUFlLElBQUk7UUFDZixJQUFJLFVBQVUsR0FBZSxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3pDLElBQUksQ0FBQyxLQUFLLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQztRQUM3QixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBQ0Qsd0NBQWUsR0FBZixVQUFnQixJQUFJO1FBQ2hCLElBQUksVUFBVSxHQUFlLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDekMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ3hCLFVBQVUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUMzQyxVQUFVLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQzdDLFVBQVUsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUUxQyxDQUFDO0lBQ0Qsd0NBQWUsR0FBZixVQUFnQixJQUFJO1FBQ2hCLElBQUksVUFBVSxHQUFlLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDekMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ3hCLFVBQVUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUMzQyxVQUFVLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQzdDLFVBQVUsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMxQyxDQUFDO0lBeERRLGNBQWM7UUFMMUIsZ0JBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxVQUFVO1lBQ3BCLFFBQVEsRUFBRSxNQUFNLENBQUMsRUFBRTtZQUNuQixXQUFXLEVBQUUsd0JBQXdCO1NBQ3hDLENBQUM7O09BQ1csY0FBYyxDQXlEMUI7SUFBRCxxQkFBQztDQUFBLEFBekRELElBeURDO0FBekRZLHdDQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRGF0ZVBpY2tlciB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2RhdGUtcGlja2VyXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcIm5zLWl0ZW1zXCIsXG4gICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2l0ZW1zLmNvbXBvbmVudC5odG1sXCIsXG59KVxuZXhwb3J0IGNsYXNzIEl0ZW1zQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcblxuICAgIH1cblxuICAgIGRhdGVEaWZmZXJlbmNlOiBzdHJpbmcgPSBcIjAgWWVhciAwIE1vbnRoIDAgRGF5XCI7XG4gICAgZGF0ZTE6IERhdGU7XG4gICAgZGF0ZTI6IERhdGU7XG5cbiAgICBvbkRhdGUxQ2hhbmdlZChhcmdzKSB7XG4gICAgICAgIGxldCBkYXRlUGlja2VyID0gPERhdGVQaWNrZXI+YXJncy5vYmplY3Q7XG4gICAgICAgIHRoaXMuZGF0ZTEgPSBkYXRlUGlja2VyLmRhdGU7XG4gICAgICAgIHRoaXMuQ2FsY3VsYXRlRGlmZmVyZW5jZSgpO1xuICAgIH1cbiAgICBwdWJsaWMgZGF5c1N0cmluZzogbnVtYmVyID0gMDtcbiAgICBDYWxjdWxhdGVEaWZmZXJlbmNlKCk6IHZvaWQge1xuICAgICAgICBsZXQgZGlmZmVyZW5jZSA9IE1hdGguYWJzKE1hdGgucm91bmQoKHRoaXMuZGF0ZTEuZ2V0VGltZSgpIC0gdGhpcy5kYXRlMi5nZXRUaW1lKCkpIC8gKDEwMDAgKiA2MCAqIDYwICogMjQpKSk7XG4gICAgICAgIHRoaXMuZGF5c1N0cmluZyA9IGRpZmZlcmVuY2U7XG4gICAgICAgIGxldCBodW1hbml6ZWRTdHJpbmc6IHN0cmluZyA9ICcnO1xuICAgICAgICBsZXQgeWVhcnMgPSBkaWZmZXJlbmNlIC8gMzY1O1xuICAgICAgICBpZiAoeWVhcnMgPj0gMSkge1xuICAgICAgICAgICAgZGlmZmVyZW5jZSAtPSAocGFyc2VJbnQoeWVhcnMudG9TdHJpbmcoKSkgKiAzNjUpO1xuICAgICAgICAgICAgaHVtYW5pemVkU3RyaW5nICs9IHBhcnNlSW50KHllYXJzLnRvU3RyaW5nKCkpICsgJyBZZWFyICc7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IG1vbnRoID0gZGlmZmVyZW5jZSAvIDMwO1xuICAgICAgICBpZiAobW9udGggPj0gMSkge1xuICAgICAgICAgICAgZGlmZmVyZW5jZSAtPSAocGFyc2VJbnQobW9udGgudG9TdHJpbmcoKSkgKiAzMCk7XG4gICAgICAgICAgICBodW1hbml6ZWRTdHJpbmcgKz0gcGFyc2VJbnQobW9udGgudG9TdHJpbmcoKSkgKyAnIE1vbnRoICc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRpZmZlcmVuY2UgPj0gMSkge1xuICAgICAgICAgICAgaHVtYW5pemVkU3RyaW5nICs9IGRpZmZlcmVuY2UgKyAnIERheSc7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kYXRlRGlmZmVyZW5jZSA9IGh1bWFuaXplZFN0cmluZy50cmltKCk7XG4gICAgfVxuICAgIG9uRGF0ZTJDaGFuZ2VkKGFyZ3MpIHtcbiAgICAgICAgbGV0IGRhdGVQaWNrZXIgPSA8RGF0ZVBpY2tlcj5hcmdzLm9iamVjdDtcbiAgICAgICAgdGhpcy5kYXRlMiA9IGRhdGVQaWNrZXIuZGF0ZTtcbiAgICAgICAgdGhpcy5DYWxjdWxhdGVEaWZmZXJlbmNlKCk7XG4gICAgfVxuICAgIG9uUGlja2VyMUxvYWRlZChhcmdzKSB7XG4gICAgICAgIGxldCBkYXRlUGlja2VyID0gPERhdGVQaWNrZXI+YXJncy5vYmplY3Q7XG4gICAgICAgIHRoaXMuZGF0ZTEgPSBuZXcgRGF0ZSgpO1xuICAgICAgICBkYXRlUGlja2VyLnllYXIgPSB0aGlzLmRhdGUxLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgIGRhdGVQaWNrZXIubW9udGggPSB0aGlzLmRhdGUxLmdldE1vbnRoKCkgKyAxO1xuICAgICAgICBkYXRlUGlja2VyLmRheSA9IHRoaXMuZGF0ZTEuZ2V0RGF0ZSgpO1xuXG4gICAgfVxuICAgIG9uUGlja2VyMkxvYWRlZChhcmdzKSB7XG4gICAgICAgIGxldCBkYXRlUGlja2VyID0gPERhdGVQaWNrZXI+YXJncy5vYmplY3Q7XG4gICAgICAgIHRoaXMuZGF0ZTIgPSBuZXcgRGF0ZSgpO1xuICAgICAgICBkYXRlUGlja2VyLnllYXIgPSB0aGlzLmRhdGUyLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgIGRhdGVQaWNrZXIubW9udGggPSB0aGlzLmRhdGUyLmdldE1vbnRoKCkgKyAxO1xuICAgICAgICBkYXRlUGlja2VyLmRheSA9IHRoaXMuZGF0ZTIuZ2V0RGF0ZSgpO1xuICAgIH1cbn0iXX0=